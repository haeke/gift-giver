// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`expects app to work 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          App Test SnapShot
        </h1>,
        <ForwardRef
          active={false}
          className="btn-add"
          disabled={false}
          onClick={[Function]}
          type="button"
          variant="primary"
        >
          Add
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "App Test SnapShot",
        },
        "ref": null,
        "rendered": "App Test SnapShot",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "active": false,
          "children": "Add",
          "className": "btn-add",
          "disabled": false,
          "onClick": [Function],
          "type": "button",
          "variant": "primary",
        },
        "ref": null,
        "rendered": "Add",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "active": false,
            "disabled": false,
            "type": "button",
            "variant": "primary",
          },
          "displayName": "Button",
          "render": [Function],
        },
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            App Test SnapShot
          </h1>,
          <ForwardRef
            active={false}
            className="btn-add"
            disabled={false}
            onClick={[Function]}
            type="button"
            variant="primary"
          >
            Add
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "App Test SnapShot",
          },
          "ref": null,
          "rendered": "App Test SnapShot",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "active": false,
            "children": "Add",
            "className": "btn-add",
            "disabled": false,
            "onClick": [Function],
            "type": "button",
            "variant": "primary",
          },
          "ref": null,
          "rendered": "Add",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "active": false,
              "disabled": false,
              "type": "button",
              "variant": "primary",
            },
            "displayName": "Button",
            "render": [Function],
          },
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
